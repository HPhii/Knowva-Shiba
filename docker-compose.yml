version: '3.8'

services:
  mysql_container:
    image: mysql:8.0
    container_name: mysql_db_container
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: exe
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    command:
      - '--innodb_buffer_pool_size=256M'
      - '--key_buffer_size=16M'
      - '--max_connections=50'
      - '--performance_schema=0'
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_PASSWORD}"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s
    mem_reservation: 256M
    mem_limit: 768M

  redis_container:
    image: redis:7.0-alpine
    container_name: redis_container
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    mem_reservation: 64M
    mem_limit: 256M

  app:
    image: hieuphi/springtest:v1
    container_name: springboot_container
    restart: unless-stopped
    environment:
      JAVA_OPTS: "-Xms256m -Xmx768m"
      MYSQL_URL: jdbc:mysql://mysql_container:3306/exe?createDatabaseIfNotExist=true
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      CLIENT_URL: ${CLIENT_URL}
      SERVER_URL: ${SERVER_URL}
      FLASK_SERVICE_HOST: ${FLASK_SERVICE_HOST}
      SPRING_DATA_REDIS_HOST: redis_container
      SPRING_DATA_REDIS_PORT: 6379
      PAYOS_CLIENT_ID: ${PAYOS_CLIENT_ID}
      PAYOS_API_KEY: ${PAYOS_API_KEY}
      PAYOS_CHECKSUM_KEY: ${PAYOS_CHECKSUM_KEY}
      PAYOS_PRICE: ${PAYOS_PRICE}
    depends_on:
      mysql_container:
        condition: service_healthy
      redis_container:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend
    mem_limit: 1.2g

  flask_app:
    image: hieuphi/flaskapp:latest
    container_name: flask_container
    restart: unless-stopped
    environment:
      LLAMDA_API_KEY1: ${LLAMDA_API_KEY1}
      LLAMDA_API_KEY2: ${LLAMDA_API_KEY2}
      LLAMDA_API_KEY3: ${LLAMDA_API_KEY3}
      LLAMDA_API_KEY4: ${LLAMDA_API_KEY4}
    depends_on:
      - app
    ports:
      - "5000:5000"
    networks:
      - backend
    mem_limit: 512m

volumes:
  mysql_data:
  redis_data:

networks:
  backend:
    driver: bridge