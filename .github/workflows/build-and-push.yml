name: Build and Deploy to VPS

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine Image Tags
        id: docker_meta
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "SPRING_TAG=hieuphi/springapp:latest" >> $GITHUB_ENV
            echo "FLASK_TAG=hieuphi/flaskapp:latest" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "SPRING_TAG=hieuphi/springapp:dev" >> $GITHUB_ENV
            echo "FLASK_TAG=hieuphi/flaskapp:dev" >> $GITHUB_ENV
          fi

      - name: Build and push Spring Boot image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.SPRING_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Flask image
        uses: docker/build-push-action@v5
        with:
          context: ./flask-service
          file: ./flask-service/Dockerfile
          push: true
          tags: ${{ env.FLASK_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_prod:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: SSH to Production Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP_PROD }}
          username: ${{ secrets.USERNAME_PROD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/azureuser/knowva
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml down --remove-orphans
            docker-compose -f docker-compose.prod.yml up -d
            docker image prune -af

  deploy_dev:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: SSH to Staging Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP_DEV }}
          username: ${{ secrets.USERNAME_DEV }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd knowva-dev
            docker-compose -f docker-compose.dev.yml pull
            docker-compose -f docker-compose.dev.yml down --remove-orphans
            docker-compose -f docker-compose.dev.yml up -d
            docker image prune -af
